{"ast":null,"code":"// import React, { useContext, useEffect, useState } from 'react'\n// import './LoginPopUp.css'\n// import { assets } from '../../assets/assets'\n// import { StoreContext } from '../../context/StoreContext'\n// import axios from \"axios\"\n// import { Link } from 'react-router-dom'\n\n// const LoginPopUp = ({setShowLogin}) => {\n\n//   const {url, setToken} = useContext(StoreContext)\n\n// const [currState, setCurrState] = useState('Login')\n// const [data, setData] = useState ({\n//   name:\"\",\n//   email:\"\",\n//   phoneNumber:\"\",\n//   password:\"\"\n//   // passwordConfirm:\"\"\n// })\n\n// const onChangeHandler = (event) => {\n//   const name = event.target.name\n//   const value = event.target.value\n\n//   setData(data=>({...data,[name]:value}))\n// }\n\n// const onLogin = async (event) => {\n//   event.preventDefault();\n\n//   let newUrl = url;\n//   if (currState === \"Login\") {\n//       newUrl += \"/api/user/login\";\n//   } else {\n//       newUrl += \"/api/user/register\";\n//   }\n\n//   try {\n//       const response = await axios.post(newUrl, data);\n\n//       if (response.data.success) {\n//           // Handle successful login or registration\n//           setToken(response.data.token);\n//           localStorage.setItem(\"token\", response.data.token);\n//           setShowLogin(false); // Hide login/register form\n//       } else {\n//           // Handle server-side errors\n//           alert(response.data.message || \"An error occurred. Please try again.\");\n//       }\n//   } catch (error) {\n//       // Handle client-side errors (e.g., network issues)\n//       const errorMessage = error.response?.data?.message || \"An error occurred. Please try again.\";\n//       alert(errorMessage);\n//   }\n// };\n\n// useEffect (()=> {\n//    console.log(data)\n// },[data])\n\n//   return (\n//     <div className='login-popup'>\n//       <form onSubmit={onLogin} className='login-popup-container'>\n//         <div className='login-popup-title'>\n//             <h2>{currState}</h2>\n//             <img onClick={()=> setShowLogin(false)} src={assets.cross_icon}></img>\n//         </div>\n//         <div className='login-popup-inputs'>\n//          {currState===\"Login\"? <></>: <input name='name' onChange={onChangeHandler} value={data.name} type='text' placeholder='Your name' required />}\n//           {currState===\"Login\"?<></>: <input name='phoneNumber' onChange={onChangeHandler} value={data.phoneNumber} type='text' placeholder='Phone Number' required />}\n\n//           <input name='email' onChange={onChangeHandler} value={data.email} type='email' placeholder='Your email' required />\n//           <input name='password' onChange={onChangeHandler} value={data.password} type='password' placeholder='Password' required />\n//           {currState===\"Login\"? <></>: <input name='passwordConfirm' onChange={onChangeHandler} value={data.passwordConfirm} type='password' placeholder='confirm Password' required />}\n//         </div>\n//         <button type='submit' >{currState===\"Sign Up\"?\"Create account\":\"Login\"}</button>\n//          {currState===\"Login\"? <Link to=\"/forgotpassword\" ><p onClick={()=> setShowLogin(false)}>Forgot Password</p></Link>   : <div className='login-popup-condition'>\n//         <input type='checkbox' required/>\n//         <p>By continuing, I agree to the terms of use & privacy policy</p>\n\n//         </div> }\n//         {/* <p>Forgot Password</p> */}\n//         {currState === \"Login\" ? <p>Create a new account? <span onClick={()=> setCurrState(\"Sign Up\")} >Click here</span></p>\n//          : <p>Already have an account? <span onClick={() => setCurrState(\"Login\")}>Login here</span></p> }\n\n//       </form>\n//     </div>\n//   )\n// }\n\n// export default LoginPopUp","map":{"version":3,"names":[],"sources":["/Users/macbookair/Documents/DeliveryApp/frontend/src/components/LoginPopUp/LoginPopUp.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react'\n// import './LoginPopUp.css'\n// import { assets } from '../../assets/assets'\n// import { StoreContext } from '../../context/StoreContext'\n// import axios from \"axios\"\n// import { Link } from 'react-router-dom'\n\n// const LoginPopUp = ({setShowLogin}) => {\n\n//   const {url, setToken} = useContext(StoreContext)\n\n// const [currState, setCurrState] = useState('Login')\n// const [data, setData] = useState ({\n//   name:\"\",\n//   email:\"\",\n//   phoneNumber:\"\",\n//   password:\"\"\n//   // passwordConfirm:\"\"\n// })\n\n// const onChangeHandler = (event) => {\n//   const name = event.target.name\n//   const value = event.target.value\n\n//   setData(data=>({...data,[name]:value}))\n// }\n\n\n\n\n\n// const onLogin = async (event) => {\n//   event.preventDefault();\n\n//   let newUrl = url;\n//   if (currState === \"Login\") {\n//       newUrl += \"/api/user/login\";\n//   } else {\n//       newUrl += \"/api/user/register\";\n//   }\n\n//   try {\n//       const response = await axios.post(newUrl, data);\n\n//       if (response.data.success) {\n//           // Handle successful login or registration\n//           setToken(response.data.token);\n//           localStorage.setItem(\"token\", response.data.token);\n//           setShowLogin(false); // Hide login/register form\n//       } else {\n//           // Handle server-side errors\n//           alert(response.data.message || \"An error occurred. Please try again.\");\n//       }\n//   } catch (error) {\n//       // Handle client-side errors (e.g., network issues)\n//       const errorMessage = error.response?.data?.message || \"An error occurred. Please try again.\";\n//       alert(errorMessage);\n//   }\n// };\n\n// useEffect (()=> {\n//    console.log(data)\n// },[data])\n\n//   return (\n//     <div className='login-popup'>\n//       <form onSubmit={onLogin} className='login-popup-container'>\n//         <div className='login-popup-title'>\n//             <h2>{currState}</h2>\n//             <img onClick={()=> setShowLogin(false)} src={assets.cross_icon}></img>\n//         </div>\n//         <div className='login-popup-inputs'>\n//          {currState===\"Login\"? <></>: <input name='name' onChange={onChangeHandler} value={data.name} type='text' placeholder='Your name' required />}\n//           {currState===\"Login\"?<></>: <input name='phoneNumber' onChange={onChangeHandler} value={data.phoneNumber} type='text' placeholder='Phone Number' required />}\n          \n//           <input name='email' onChange={onChangeHandler} value={data.email} type='email' placeholder='Your email' required />\n//           <input name='password' onChange={onChangeHandler} value={data.password} type='password' placeholder='Password' required />\n//           {currState===\"Login\"? <></>: <input name='passwordConfirm' onChange={onChangeHandler} value={data.passwordConfirm} type='password' placeholder='confirm Password' required />}\n//         </div>\n//         <button type='submit' >{currState===\"Sign Up\"?\"Create account\":\"Login\"}</button>\n//          {currState===\"Login\"? <Link to=\"/forgotpassword\" ><p onClick={()=> setShowLogin(false)}>Forgot Password</p></Link>   : <div className='login-popup-condition'>\n//         <input type='checkbox' required/>\n//         <p>By continuing, I agree to the terms of use & privacy policy</p>\n        \n//         </div> }\n//         {/* <p>Forgot Password</p> */}\n//         {currState === \"Login\" ? <p>Create a new account? <span onClick={()=> setCurrState(\"Sign Up\")} >Click here</span></p>\n//          : <p>Already have an account? <span onClick={() => setCurrState(\"Login\")}>Login here</span></p> }\n        \n        \n        \n//       </form>\n//     </div>\n//   )\n// }\n\n// export default LoginPopUp\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}