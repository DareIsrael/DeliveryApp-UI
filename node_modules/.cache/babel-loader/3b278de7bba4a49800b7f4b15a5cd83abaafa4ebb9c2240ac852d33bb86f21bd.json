{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Documents/DeliveryApp/frontend/src/components/ForgotResetPassword/ResetPassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './ForgotPassword.css'; // Ensure this path is correct\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { assets } from '../../assets/assets';\n// import { Link } from 'react-router-dom';\n\n// const ResetPassword = ({setShowLogin}) => {\n//   const {id, token } = useParams();\n//   const navigate = useNavigate();\n//   const [password, setPassword] = useState('');\n//   const [passwordConfirm, setPasswordConfirm] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   // axios.defaults.withCredentials = true;\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(`http://localhost:4000/api/user/resetpassword/${id}/${token}`, { password });\n\n//       if (response.data.success) {\n//         setMessage('Password has been reset. Redirecting you to the home page...');\n//         setShowLogin(true);\n//         // Delay the redirect to allow the user to see the success message\n//       } else {\n//         setMessage(response.data.message);\n//       }\n\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className='forgot-popup'>\n//       <form onSubmit={handleSubmit} className='forgot-popup-container'>\n//         <div className='forgot-popup-title'>\n//           <h2>Reset Your Password</h2>\n//           <Link to='/'>\n//             <img src={assets.cross_icon} alt='Close' />\n//           </Link>\n//         </div>\n//         <div className='forgot-popup-inputs'>\n//           <input\n//             type='password'\n//             placeholder='New Password'\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <input\n//             type='password'\n//             placeholder='Confirm New Password'\n//             value={passwordConfirm}\n//             onChange={(e) => setPasswordConfirm(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type='submit'>Reset Password</button>\n//         {message && <p className='message'>{message}</p>}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ForgotPassword.css'; // Ensure this path is correct\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { assets } from '../../assets/assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  setShowLogin\n}) => {\n  _s();\n  const {\n    id,\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  // Function to handle the form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password !== passwordConfirm) {\n      setMessage('Passwords do not match!');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:4000/api/user/resetpassword/${id}/${token}`, {\n        password\n      });\n      if (response.data.success) {\n        setMessage('Password has been reset successfully.');\n        setSuccess(true); // Set success flag to true\n        setShowLogin(true); // Show the login form (if applicable)\n      } else {\n        setMessage(response.data.message);\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  // Redirect to home page after success\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate('/'); // Redirect to the home page\n      }, 3000); // Delay of 3 seconds\n\n      return () => clearTimeout(timer); // Clear timeout when component unmounts\n    }\n  }, [success, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forgot-popup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-popup-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: assets.cross_icon,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-popup-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          value: passwordConfirm,\n          onChange: e => setPasswordConfirm(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setShowLogin(true),\n        children: [\"Kindly \", /*#__PURE__*/_jsxDEV(\"span\", {\n          clas: true,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 55\n        }, this), \" after clicking the reset button\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"bOJLikrnlxNvEwfsDNv2hqCwx40=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Link","assets","jsxDEV","_jsxDEV","ResetPassword","setShowLogin","_s","id","token","navigate","password","setPassword","passwordConfirm","setPasswordConfirm","message","setMessage","success","setSuccess","handleSubmit","e","preventDefault","response","post","data","error","console","timer","setTimeout","clearTimeout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","to","src","cross_icon","alt","type","placeholder","value","onChange","target","required","onClick","clas","_c","$RefreshReg$"],"sources":["/Users/macbookair/Documents/DeliveryApp/frontend/src/components/ForgotResetPassword/ResetPassword.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './ForgotPassword.css'; // Ensure this path is correct\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { assets } from '../../assets/assets';\n// import { Link } from 'react-router-dom';\n\n\n// const ResetPassword = ({setShowLogin}) => {\n//   const {id, token } = useParams();\n//   const navigate = useNavigate();\n//   const [password, setPassword] = useState('');\n//   const [passwordConfirm, setPasswordConfirm] = useState('');\n//   const [message, setMessage] = useState('');\n\n  \n//   // axios.defaults.withCredentials = true;\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(`http://localhost:4000/api/user/resetpassword/${id}/${token}`, { password });\n\n//       if (response.data.success) {\n//         setMessage('Password has been reset. Redirecting you to the home page...');\n//         setShowLogin(true);\n//         // Delay the redirect to allow the user to see the success message\n//       } else {\n//         setMessage(response.data.message);\n//       }\n\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className='forgot-popup'>\n//       <form onSubmit={handleSubmit} className='forgot-popup-container'>\n//         <div className='forgot-popup-title'>\n//           <h2>Reset Your Password</h2>\n//           <Link to='/'>\n//             <img src={assets.cross_icon} alt='Close' />\n//           </Link>\n//         </div>\n//         <div className='forgot-popup-inputs'>\n//           <input\n//             type='password'\n//             placeholder='New Password'\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <input\n//             type='password'\n//             placeholder='Confirm New Password'\n//             value={passwordConfirm}\n//             onChange={(e) => setPasswordConfirm(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type='submit'>Reset Password</button>\n//         {message && <p className='message'>{message}</p>}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ForgotPassword.css'; // Ensure this path is correct\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { assets } from '../../assets/assets';\n\nconst ResetPassword = ({ setShowLogin }) => {\n  const { id, token } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  // Function to handle the form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password !== passwordConfirm) {\n      setMessage('Passwords do not match!');\n      return;\n    }\n\n    try {\n      const response = await axios.post(`http://localhost:4000/api/user/resetpassword/${id}/${token}`, { password });\n\n      if (response.data.success) {\n        setMessage('Password has been reset successfully.');\n        setSuccess(true); // Set success flag to true\n        setShowLogin(true); // Show the login form (if applicable)\n      } else {\n        setMessage(response.data.message);\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  // Redirect to home page after success\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate('/'); // Redirect to the home page\n      }, 3000); // Delay of 3 seconds\n\n      return () => clearTimeout(timer); // Clear timeout when component unmounts\n    }\n  }, [success, navigate]);\n\n  return (\n    <div className='forgot-popup'>\n      <form onSubmit={handleSubmit} className='forgot-popup-container'>\n        <div className='forgot-popup-title'>\n          <h2>Reset Your Password</h2>\n          <Link to='/'>\n            <img src={assets.cross_icon} alt='Close' />\n          </Link>\n        </div>\n        <div className='forgot-popup-inputs'>\n          <input\n            type='password'\n            placeholder='New Password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <input\n            type='password'\n            placeholder='Confirm New Password'\n            value={passwordConfirm}\n            onChange={(e) => setPasswordConfirm(e.target.value)}\n            required\n          />\n        </div>\n        <button type='submit'>Reset Password</button>\n        {message && <p className='message'>{message}</p>} {/* Display the message */}\n        <p onClick={()=> setShowLogin(true)}  >Kindly <span clas>Login</span> after clicking the reset button</p>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}