{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Documents/DeliveryApp/frontend/src/components/ForgotResetPassword/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport './ForgotPassword.css'; // Ensure this path is correct\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { assets } from '../../assets/assets';\nimport { StoreContext } from '../../context/StoreContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  setShowResetPassword,\n  setShowLogin\n}) => {\n  _s();\n  const {\n    id,\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const {\n    url\n  } = useContext(StoreContext);\n\n  // Function to handle the form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password !== passwordConfirm) {\n      setMessage('Passwords do not match!');\n      return;\n    }\n    try {\n      const response = await axios.post(`${url}/api/user/resetpassword/${id}/${token}`, {\n        password\n      });\n      if (response.data.success) {\n        setMessage('Password has been reset successfully.');\n        setSuccess(true); // Set success flag to true\n        setShowLogin(true); // Show the login form (if applicable)\n      } else {\n        setMessage(response.data.message);\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  // Redirect to home page after success\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate('/'); // Redirect to the home page\n      }, 3000); // Delay of 3 seconds\n\n      return () => clearTimeout(timer); // Clear timeout when component unmounts\n    }\n  }, [success, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forgot-popup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-popup-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: assets.cross_icon,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-popup-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          value: passwordConfirm,\n          onChange: e => setPasswordConfirm(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setShowLogin(true),\n          children: [\"Kindly \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"login_span\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 55\n          }, this), \" after clicking the reset password button\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"E7lhJBDJi/l1KH+xJauw4WpKdys=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","useParams","useNavigate","Link","assets","StoreContext","jsxDEV","_jsxDEV","ResetPassword","setShowResetPassword","setShowLogin","_s","id","token","navigate","password","setPassword","passwordConfirm","setPasswordConfirm","message","setMessage","success","setSuccess","url","handleSubmit","e","preventDefault","response","post","data","error","console","timer","setTimeout","clearTimeout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","to","src","cross_icon","alt","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/macbookair/Documents/DeliveryApp/frontend/src/components/ForgotResetPassword/ResetPassword.js"],"sourcesContent":["\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport './ForgotPassword.css'; // Ensure this path is correct\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { assets } from '../../assets/assets';\nimport { StoreContext } from '../../context/StoreContext';\n\nconst ResetPassword = ({ setShowResetPassword, setShowLogin }) => {\n  const { id, token } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const { url } = useContext(StoreContext);\n\n  // Function to handle the form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password !== passwordConfirm) {\n      setMessage('Passwords do not match!');\n      return;\n    }\n   \n    try {\n      const response = await axios.post(`${url}/api/user/resetpassword/${id}/${token}`, { password });\n\n      if (response.data.success) {\n        setMessage('Password has been reset successfully.');\n        setSuccess(true); // Set success flag to true\n        setShowLogin(true); // Show the login form (if applicable)\n      } else {\n        setMessage(response.data.message);\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  // Redirect to home page after success\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate('/'); // Redirect to the home page\n      }, 3000); // Delay of 3 seconds\n\n      return () => clearTimeout(timer); // Clear timeout when component unmounts\n    }\n  }, [success, navigate]);\n\n  return (\n    <div className='forgot-popup'>\n      <form onSubmit={handleSubmit} className='forgot-popup-container'>\n        <div className='forgot-popup-title'>\n          <h2>Reset Your Password</h2>\n          <Link to='/'>\n            <img src={assets.cross_icon} alt='Close' />\n          </Link>\n        </div>\n        <div className='forgot-popup-inputs'>\n          <input\n            type='password'\n            placeholder='New Password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <input\n            type='password'\n            placeholder='Confirm New Password'\n            value={passwordConfirm}\n            onChange={(e) => setPasswordConfirm(e.target.value)}\n            required\n          />\n        </div>\n        <button type='submit'>Reset Password</button>\n        {message && <p className='message'>{message}</p>} {/* Display the message */}\n\n        <Link to='/'>\n        <p onClick={()=> setShowLogin(true)}  >Kindly <span className='login_span'>Login</span> after clicking the reset password button</p>\n        </Link>\n       \n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}